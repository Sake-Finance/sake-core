{
  "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPoolAddressesProvider",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "chainlinkSources",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "pythSources",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "fallbackOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "baseCurrencyUnit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        }
      ],
      "name": "AssetSourceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseCurrency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseCurrencyUnit",
          "type": "uint256"
        }
      ],
      "name": "BaseCurrencySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "fallbackOracle",
          "type": "address"
        }
      ],
      "name": "FallbackOracleUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADDRESSES_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_CURRENCY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BASE_CURRENCY_UNIT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "getAssetsPrices",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getChainlinkSourceOfAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFallbackOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getPythSourceOfAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "sources",
          "type": "address[]"
        }
      ],
      "name": "setChainlinkAssetSources",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fallbackOracle",
          "type": "address"
        }
      ],
      "name": "setFallbackOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "sources",
          "type": "address[]"
        }
      ],
      "name": "setPythAssetSources",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
  "receipt": {
    "to": null,
    "from": "0x8Ab8aEEf444AeE718A275a8325795FE90CF162c4",
    "contractAddress": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
    "transactionIndex": 1,
    "gasUsed": "1154561",
    "logsBloom": "0x00000000200000000000000001000000004000000000400000000000000000000000000000100000000000000021000000000000000000000020000000140000000000001000000080000000000000000000000000000000000000000002000000000000020200000000000000000c00000012000800000200000000000000000000000000000000020000000000000000000002000000000000040000000000000000008000000000000000000000000000000000000000200000000000000000004000000004000000000100000000000000000000000002000000000020800000000000000080000000100000100000000000800000000000000000000000",
    "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d",
    "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0xce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000004200000000000000000000000000000000000006",
          "0x00000000000000000000000096b0f252dd2f8ab9c51465ea195226ba5939aa5c"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000002cae934a1e84f693fbb78ca5ed3b0a6893259441",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000008bedecb512ccad2962ce284dde4540aa219fa728",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000004200000000000000000000000000000000000006",
          "0x000000000000000000000000d3da430a1d7ddbe4306fd876cd8f14880d5829e5"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000002cae934a1e84f693fbb78ca5ed3b0a6893259441",
          "0x000000000000000000000000e1bc83bc7f096d61bb9911719eec48fde03a99a7"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0x22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc1",
          "0x0000000000000000000000008bedecb512ccad2962ce284dde4540aa219fa728",
          "0x000000000000000000000000b9b213680d656356a0fdcd94f2157be7f05a7d8e"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1508912,
        "transactionHash": "0xa5caafac807b81dd4c094825cd24cc884eb9a979c27cf68e6ca3025a49dc694e",
        "address": "0x94189c42B5e11d742aC689e8e8d51220144E0290",
        "topics": [
          "0xe27c4c1372396a3d15a9922f74f9dfc7c72b1ad6d63868470787249c356454c1",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000005f5e100",
        "logIndex": 7,
        "blockHash": "0x43ebb5207a0d97e0f58699fbd7c98a7ebe1d882c40970aeb883c6af484226a1d"
      }
    ],
    "blockNumber": 1508912,
    "cumulativeGasUsed": "1209651",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa0Dd19f83df7d0Db5fe6eDaA7B73C0CB28a91142",
    [
      "0x4200000000000000000000000000000000000006",
      "0x2CAE934a1e84F693fbb78CA5ED3B0A6893259441",
      "0x8BEDECB512cCAD2962ce284DdE4540Aa219fa728"
    ],
    [
      "0x96b0f252dd2F8aB9C51465EA195226ba5939aa5C",
      "0x0000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000000"
    ],
    [
      "0xd3da430a1d7dDBE4306Fd876CD8f14880D5829E5",
      "0xe1bC83Bc7F096D61bB9911719eEc48FDE03A99a7",
      "0xB9b213680d656356a0FDcd94f2157bE7F05A7d8E"
    ],
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000",
    "100000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "1cf6dc100e2330c86322ad94517a96cc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"chainlinkSources\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"pythSources\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"AssetSourceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseCurrency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseCurrencyUnit\",\"type\":\"uint256\"}],\"name\":\"BaseCurrencySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"FallbackOracleUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BASE_CURRENCY_UNIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getChainlinkSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getPythSourceOfAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setChainlinkAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"sources\",\"type\":\"address[]\"}],\"name\":\"setPythAssetSources\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sake\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"assets\":\"The addresses of the assets\",\"baseCurrency\":\"The base currency used for the price quotes. If USD is used, base currency is 0x0\",\"baseCurrencyUnit\":\"The unit of the base currency\",\"chainlinkSources\":\"The address of the chainlink source of each asset\",\"fallbackOracle\":\"The address of the fallback oracle to use if the data of an        aggregator is not consistent, should be pyth\",\"provider\":\"The address of the new PoolAddressesProvider\",\"pythSources\":\"The address of the pyth source of each asset\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The price of the asset\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of assets addresses\"},\"returns\":{\"_0\":\"The prices of the given assets\"}},\"getChainlinkSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The address of the Chainlink source\"}},\"getFallbackOracle()\":{\"returns\":{\"_0\":\"The address of the fallback oracle\"}},\"getPythSourceOfAsset(address)\":{\"params\":{\"asset\":\"The address of the asset\"},\"returns\":{\"_0\":\"The address of the Pyth source\"}},\"setChainlinkAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The addresses of the price sources\"}},\"setFallbackOracle(address)\":{\"params\":{\"fallbackOracle\":\"The address of the fallback oracle\"}},\"setPythAssetSources(address[],address[])\":{\"params\":{\"assets\":\"The addresses of the assets\",\"sources\":\"The addresses of the price sources\"}}},\"stateVariables\":{\"ADDRESSES_PROVIDER\":{\"return\":\"The address of the PoolAddressesProvider contract\",\"returns\":{\"_0\":\"The address of the PoolAddressesProvider contract\"}},\"BASE_CURRENCY\":{\"details\":\"Address 0x0 is reserved for USD as base currency.\",\"return\":\"Returns the base currency address.\",\"returns\":{\"_0\":\"Returns the base currency address.\"}},\"BASE_CURRENCY_UNIT\":{\"details\":\"1 ether for ETH, 1e8 for USD.\",\"return\":\"Returns the base currency unit.\",\"returns\":{\"_0\":\"Returns the base currency unit.\"}}},\"title\":\"AaveOracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider\"},\"BASE_CURRENCY()\":{\"notice\":\"Returns the base currency address\"},\"BASE_CURRENCY_UNIT()\":{\"notice\":\"Returns the base currency unit\"},\"constructor\":{\"notice\":\"Constructor\"},\"getAssetPrice(address)\":{\"notice\":\"Returns the asset price in the base currency\"},\"getAssetsPrices(address[])\":{\"notice\":\"Returns a list of prices from a list of assets addresses\"},\"getChainlinkSourceOfAsset(address)\":{\"notice\":\"Returns the address of the Chainlink source for an asset address\"},\"getFallbackOracle()\":{\"notice\":\"Returns the address of the fallback oracle\"},\"getPythSourceOfAsset(address)\":{\"notice\":\"Returns the address of the Pyth source for an asset address\"},\"setChainlinkAssetSources(address[],address[])\":{\"notice\":\"Sets or replaces Chainlink price sources of assets\"},\"setFallbackOracle(address)\":{\"notice\":\"Sets the fallback oracle\"},\"setPythAssetSources(address[],address[])\":{\"notice\":\"Sets or replaces Pyth price sources of assets\"}},\"notice\":\"Contract to get asset prices, manage price sources and update the fallback oracle - Use of Chainlink Aggregators as first source of price, Pyth Aggregators as second source of price - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallback oracle, which is pyth oracle - PythAggregatorV3 - compare to original AaveOracle: use AggregatorV3Interface rather then AggregatorInterface, use latestRoundData() rather then latestAnswer()\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sake/contracts/misc/AaveOracle.sol\":\"AaveOracle\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/core-v3/contracts/interfaces/IACLManager.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\\n\\n/**\\n * @title IACLManager\\n * @author Aave\\n * @notice Defines the basic interface for the ACL Manager\\n */\\ninterface IACLManager {\\n  /**\\n   * @notice Returns the contract address of the PoolAddressesProvider\\n   * @return The address of the PoolAddressesProvider\\n   */\\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\\n\\n  /**\\n   * @notice Returns the identifier of the PoolAdmin role\\n   * @return The id of the PoolAdmin role\\n   */\\n  function POOL_ADMIN_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Returns the identifier of the EmergencyAdmin role\\n   * @return The id of the EmergencyAdmin role\\n   */\\n  function EMERGENCY_ADMIN_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Returns the identifier of the RiskAdmin role\\n   * @return The id of the RiskAdmin role\\n   */\\n  function RISK_ADMIN_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Returns the identifier of the FlashBorrower role\\n   * @return The id of the FlashBorrower role\\n   */\\n  function FLASH_BORROWER_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Returns the identifier of the Bridge role\\n   * @return The id of the Bridge role\\n   */\\n  function BRIDGE_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Returns the identifier of the AssetListingAdmin role\\n   * @return The id of the AssetListingAdmin role\\n   */\\n  function ASSET_LISTING_ADMIN_ROLE() external view returns (bytes32);\\n\\n  /**\\n   * @notice Set the role as admin of a specific role.\\n   * @dev By default the admin role for all roles is `DEFAULT_ADMIN_ROLE`.\\n   * @param role The role to be managed by the admin role\\n   * @param adminRole The admin role\\n   */\\n  function setRoleAdmin(bytes32 role, bytes32 adminRole) external;\\n\\n  /**\\n   * @notice Adds a new admin as PoolAdmin\\n   * @param admin The address of the new admin\\n   */\\n  function addPoolAdmin(address admin) external;\\n\\n  /**\\n   * @notice Removes an admin as PoolAdmin\\n   * @param admin The address of the admin to remove\\n   */\\n  function removePoolAdmin(address admin) external;\\n\\n  /**\\n   * @notice Returns true if the address is PoolAdmin, false otherwise\\n   * @param admin The address to check\\n   * @return True if the given address is PoolAdmin, false otherwise\\n   */\\n  function isPoolAdmin(address admin) external view returns (bool);\\n\\n  /**\\n   * @notice Adds a new admin as EmergencyAdmin\\n   * @param admin The address of the new admin\\n   */\\n  function addEmergencyAdmin(address admin) external;\\n\\n  /**\\n   * @notice Removes an admin as EmergencyAdmin\\n   * @param admin The address of the admin to remove\\n   */\\n  function removeEmergencyAdmin(address admin) external;\\n\\n  /**\\n   * @notice Returns true if the address is EmergencyAdmin, false otherwise\\n   * @param admin The address to check\\n   * @return True if the given address is EmergencyAdmin, false otherwise\\n   */\\n  function isEmergencyAdmin(address admin) external view returns (bool);\\n\\n  /**\\n   * @notice Adds a new admin as RiskAdmin\\n   * @param admin The address of the new admin\\n   */\\n  function addRiskAdmin(address admin) external;\\n\\n  /**\\n   * @notice Removes an admin as RiskAdmin\\n   * @param admin The address of the admin to remove\\n   */\\n  function removeRiskAdmin(address admin) external;\\n\\n  /**\\n   * @notice Returns true if the address is RiskAdmin, false otherwise\\n   * @param admin The address to check\\n   * @return True if the given address is RiskAdmin, false otherwise\\n   */\\n  function isRiskAdmin(address admin) external view returns (bool);\\n\\n  /**\\n   * @notice Adds a new address as FlashBorrower\\n   * @param borrower The address of the new FlashBorrower\\n   */\\n  function addFlashBorrower(address borrower) external;\\n\\n  /**\\n   * @notice Removes an address as FlashBorrower\\n   * @param borrower The address of the FlashBorrower to remove\\n   */\\n  function removeFlashBorrower(address borrower) external;\\n\\n  /**\\n   * @notice Returns true if the address is FlashBorrower, false otherwise\\n   * @param borrower The address to check\\n   * @return True if the given address is FlashBorrower, false otherwise\\n   */\\n  function isFlashBorrower(address borrower) external view returns (bool);\\n\\n  /**\\n   * @notice Adds a new address as Bridge\\n   * @param bridge The address of the new Bridge\\n   */\\n  function addBridge(address bridge) external;\\n\\n  /**\\n   * @notice Removes an address as Bridge\\n   * @param bridge The address of the bridge to remove\\n   */\\n  function removeBridge(address bridge) external;\\n\\n  /**\\n   * @notice Returns true if the address is Bridge, false otherwise\\n   * @param bridge The address to check\\n   * @return True if the given address is Bridge, false otherwise\\n   */\\n  function isBridge(address bridge) external view returns (bool);\\n\\n  /**\\n   * @notice Adds a new admin as AssetListingAdmin\\n   * @param admin The address of the new admin\\n   */\\n  function addAssetListingAdmin(address admin) external;\\n\\n  /**\\n   * @notice Removes an admin as AssetListingAdmin\\n   * @param admin The address of the admin to remove\\n   */\\n  function removeAssetListingAdmin(address admin) external;\\n\\n  /**\\n   * @notice Returns true if the address is AssetListingAdmin, false otherwise\\n   * @param admin The address to check\\n   * @return True if the given address is AssetListingAdmin, false otherwise\\n   */\\n  function isAssetListingAdmin(address admin) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xe39a407a074d8ac950deb7d1d855b39d53e35a5a441a7074c3d26cddef10406b\",\"license\":\"AGPL-3.0\"},\"contracts/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title IPoolAddressesProvider\\n * @author Aave\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\n */\\ninterface IPoolAddressesProvider {\\n  /**\\n   * @dev Emitted when the market identifier is updated.\\n   * @param oldMarketId The old id of the market\\n   * @param newMarketId The new id of the market\\n   */\\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\n\\n  /**\\n   * @dev Emitted when the pool is updated.\\n   * @param oldAddress The old address of the Pool\\n   * @param newAddress The new address of the Pool\\n   */\\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool configurator is updated.\\n   * @param oldAddress The old address of the PoolConfigurator\\n   * @param newAddress The new address of the PoolConfigurator\\n   */\\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle is updated.\\n   * @param oldAddress The old address of the PriceOracle\\n   * @param newAddress The new address of the PriceOracle\\n   */\\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL manager is updated.\\n   * @param oldAddress The old address of the ACLManager\\n   * @param newAddress The new address of the ACLManager\\n   */\\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL admin is updated.\\n   * @param oldAddress The old address of the ACLAdmin\\n   * @param newAddress The new address of the ACLAdmin\\n   */\\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle sentinel is updated.\\n   * @param oldAddress The old address of the PriceOracleSentinel\\n   * @param newAddress The new address of the PriceOracleSentinel\\n   */\\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool data provider is updated.\\n   * @param oldAddress The old address of the PoolDataProvider\\n   * @param newAddress The new address of the PoolDataProvider\\n   */\\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when a new proxy is created.\\n   * @param id The identifier of the proxy\\n   * @param proxyAddress The address of the created proxy contract\\n   * @param implementationAddress The address of the implementation contract\\n   */\\n  event ProxyCreated(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address indexed implementationAddress\\n  );\\n\\n  /**\\n   * @dev Emitted when a new non-proxied contract address is registered.\\n   * @param id The identifier of the contract\\n   * @param oldAddress The address of the old contract\\n   * @param newAddress The address of the new contract\\n   */\\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the implementation of the proxy registered with id is updated\\n   * @param id The identifier of the contract\\n   * @param proxyAddress The address of the proxy contract\\n   * @param oldImplementationAddress The address of the old implementation contract\\n   * @param newImplementationAddress The address of the new implementation contract\\n   */\\n  event AddressSetAsProxy(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address oldImplementationAddress,\\n    address indexed newImplementationAddress\\n  );\\n\\n  /**\\n   * @notice Returns the id of the Aave market to which this contract points to.\\n   * @return The market id\\n   */\\n  function getMarketId() external view returns (string memory);\\n\\n  /**\\n   * @notice Associates an id with a specific PoolAddressesProvider.\\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\n   * identify and validate multiple Aave markets.\\n   * @param newMarketId The market id\\n   */\\n  function setMarketId(string calldata newMarketId) external;\\n\\n  /**\\n   * @notice Returns an address by its identifier.\\n   * @dev The returned address might be an EOA or a contract, potentially proxied\\n   * @dev It returns ZERO if there is no registered address with the given id\\n   * @param id The id\\n   * @return The address of the registered for the specified id\\n   */\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  /**\\n   * @notice General function to update the implementation of a proxy registered with\\n   * certain `id`. If there is no proxy registered, it will instantiate one and\\n   * set as implementation the `newImplementationAddress`.\\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\n   * setter function, in order to avoid unexpected consequences\\n   * @param id The id\\n   * @param newImplementationAddress The address of the new implementation\\n   */\\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\\n\\n  /**\\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\n   * @param id The id\\n   * @param newAddress The address to set\\n   */\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  /**\\n   * @notice Returns the address of the Pool proxy.\\n   * @return The Pool proxy address\\n   */\\n  function getPool() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the Pool, or creates a proxy\\n   * setting the new `pool` implementation when the function is called for the first time.\\n   * @param newPoolImpl The new Pool implementation\\n   */\\n  function setPoolImpl(address newPoolImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the PoolConfigurator proxy.\\n   * @return The PoolConfigurator proxy address\\n   */\\n  function getPoolConfigurator() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\n   */\\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle.\\n   * @return The address of the PriceOracle\\n   */\\n  function getPriceOracle() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle.\\n   * @param newPriceOracle The address of the new PriceOracle\\n   */\\n  function setPriceOracle(address newPriceOracle) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL manager.\\n   * @return The address of the ACLManager\\n   */\\n  function getACLManager() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL manager.\\n   * @param newAclManager The address of the new ACLManager\\n   */\\n  function setACLManager(address newAclManager) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL admin.\\n   * @return The address of the ACL admin\\n   */\\n  function getACLAdmin() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL admin.\\n   * @param newAclAdmin The address of the new ACL admin\\n   */\\n  function setACLAdmin(address newAclAdmin) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle sentinel.\\n   * @return The address of the PriceOracleSentinel\\n   */\\n  function getPriceOracleSentinel() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle sentinel.\\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\n   */\\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\n\\n  /**\\n   * @notice Returns the address of the data provider.\\n   * @return The address of the DataProvider\\n   */\\n  function getPoolDataProvider() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the data provider.\\n   * @param newDataProvider The address of the new DataProvider\\n   */\\n  function setPoolDataProvider(address newDataProvider) external;\\n}\\n\",\"keccak256\":\"0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5\",\"license\":\"AGPL-3.0\"},\"contracts/core-v3/contracts/interfaces/IPriceOracleGetter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title IPriceOracleGetter\\n * @author Aave\\n * @notice Interface for the Aave price oracle.\\n */\\ninterface IPriceOracleGetter {\\n  /**\\n   * @notice Returns the base currency address\\n   * @dev Address 0x0 is reserved for USD as base currency.\\n   * @return Returns the base currency address.\\n   */\\n  function BASE_CURRENCY() external view returns (address);\\n\\n  /**\\n   * @notice Returns the base currency unit\\n   * @dev 1 ether for ETH, 1e8 for USD.\\n   * @return Returns the base currency unit.\\n   */\\n  function BASE_CURRENCY_UNIT() external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the asset price in the base currency\\n   * @param asset The address of the asset\\n   * @return The price of the asset\\n   */\\n  function getAssetPrice(address asset) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfe72e94869ca91465a7f57282b8d367b2c9ba798fdc13ac8546304db8d971df6\",\"license\":\"AGPL-3.0\"},\"contracts/core-v3/contracts/protocol/libraries/helpers/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Errors library\\n * @author Aave\\n * @notice Defines the error messages emitted by the different contracts of the Aave protocol\\n */\\nlibrary Errors {\\n  string public constant CALLER_NOT_POOL_ADMIN = '1'; // 'The caller of the function is not a pool admin'\\n  string public constant CALLER_NOT_EMERGENCY_ADMIN = '2'; // 'The caller of the function is not an emergency admin'\\n  string public constant CALLER_NOT_POOL_OR_EMERGENCY_ADMIN = '3'; // 'The caller of the function is not a pool or emergency admin'\\n  string public constant CALLER_NOT_RISK_OR_POOL_ADMIN = '4'; // 'The caller of the function is not a risk or pool admin'\\n  string public constant CALLER_NOT_ASSET_LISTING_OR_POOL_ADMIN = '5'; // 'The caller of the function is not an asset listing or pool admin'\\n  string public constant CALLER_NOT_BRIDGE = '6'; // 'The caller of the function is not a bridge'\\n  string public constant ADDRESSES_PROVIDER_NOT_REGISTERED = '7'; // 'Pool addresses provider is not registered'\\n  string public constant INVALID_ADDRESSES_PROVIDER_ID = '8'; // 'Invalid id for the pool addresses provider'\\n  string public constant NOT_CONTRACT = '9'; // 'Address is not a contract'\\n  string public constant CALLER_NOT_POOL_CONFIGURATOR = '10'; // 'The caller of the function is not the pool configurator'\\n  string public constant CALLER_NOT_ATOKEN = '11'; // 'The caller of the function is not an AToken'\\n  string public constant INVALID_ADDRESSES_PROVIDER = '12'; // 'The address of the pool addresses provider is invalid'\\n  string public constant INVALID_FLASHLOAN_EXECUTOR_RETURN = '13'; // 'Invalid return value of the flashloan executor function'\\n  string public constant RESERVE_ALREADY_ADDED = '14'; // 'Reserve has already been added to reserve list'\\n  string public constant NO_MORE_RESERVES_ALLOWED = '15'; // 'Maximum amount of reserves in the pool reached'\\n  string public constant EMODE_CATEGORY_RESERVED = '16'; // 'Zero eMode category is reserved for volatile heterogeneous assets'\\n  string public constant INVALID_EMODE_CATEGORY_ASSIGNMENT = '17'; // 'Invalid eMode category assignment to asset'\\n  string public constant RESERVE_LIQUIDITY_NOT_ZERO = '18'; // 'The liquidity of the reserve needs to be 0'\\n  string public constant FLASHLOAN_PREMIUM_INVALID = '19'; // 'Invalid flashloan premium'\\n  string public constant INVALID_RESERVE_PARAMS = '20'; // 'Invalid risk parameters for the reserve'\\n  string public constant INVALID_EMODE_CATEGORY_PARAMS = '21'; // 'Invalid risk parameters for the eMode category'\\n  string public constant BRIDGE_PROTOCOL_FEE_INVALID = '22'; // 'Invalid bridge protocol fee'\\n  string public constant CALLER_MUST_BE_POOL = '23'; // 'The caller of this function must be a pool'\\n  string public constant INVALID_MINT_AMOUNT = '24'; // 'Invalid amount to mint'\\n  string public constant INVALID_BURN_AMOUNT = '25'; // 'Invalid amount to burn'\\n  string public constant INVALID_AMOUNT = '26'; // 'Amount must be greater than 0'\\n  string public constant RESERVE_INACTIVE = '27'; // 'Action requires an active reserve'\\n  string public constant RESERVE_FROZEN = '28'; // 'Action cannot be performed because the reserve is frozen'\\n  string public constant RESERVE_PAUSED = '29'; // 'Action cannot be performed because the reserve is paused'\\n  string public constant BORROWING_NOT_ENABLED = '30'; // 'Borrowing is not enabled'\\n  string public constant STABLE_BORROWING_NOT_ENABLED = '31'; // 'Stable borrowing is not enabled'\\n  string public constant NOT_ENOUGH_AVAILABLE_USER_BALANCE = '32'; // 'User cannot withdraw more than the available balance'\\n  string public constant INVALID_INTEREST_RATE_MODE_SELECTED = '33'; // 'Invalid interest rate mode selected'\\n  string public constant COLLATERAL_BALANCE_IS_ZERO = '34'; // 'The collateral balance is 0'\\n  string public constant HEALTH_FACTOR_LOWER_THAN_LIQUIDATION_THRESHOLD = '35'; // 'Health factor is lesser than the liquidation threshold'\\n  string public constant COLLATERAL_CANNOT_COVER_NEW_BORROW = '36'; // 'There is not enough collateral to cover a new borrow'\\n  string public constant COLLATERAL_SAME_AS_BORROWING_CURRENCY = '37'; // 'Collateral is (mostly) the same currency that is being borrowed'\\n  string public constant AMOUNT_BIGGER_THAN_MAX_LOAN_SIZE_STABLE = '38'; // 'The requested amount is greater than the max loan size in stable rate mode'\\n  string public constant NO_DEBT_OF_SELECTED_TYPE = '39'; // 'For repayment of a specific type of debt, the user needs to have debt that type'\\n  string public constant NO_EXPLICIT_AMOUNT_TO_REPAY_ON_BEHALF = '40'; // 'To repay on behalf of a user an explicit amount to repay is needed'\\n  string public constant NO_OUTSTANDING_STABLE_DEBT = '41'; // 'User does not have outstanding stable rate debt on this reserve'\\n  string public constant NO_OUTSTANDING_VARIABLE_DEBT = '42'; // 'User does not have outstanding variable rate debt on this reserve'\\n  string public constant UNDERLYING_BALANCE_ZERO = '43'; // 'The underlying balance needs to be greater than 0'\\n  string public constant INTEREST_RATE_REBALANCE_CONDITIONS_NOT_MET = '44'; // 'Interest rate rebalance conditions were not met'\\n  string public constant HEALTH_FACTOR_NOT_BELOW_THRESHOLD = '45'; // 'Health factor is not below the threshold'\\n  string public constant COLLATERAL_CANNOT_BE_LIQUIDATED = '46'; // 'The collateral chosen cannot be liquidated'\\n  string public constant SPECIFIED_CURRENCY_NOT_BORROWED_BY_USER = '47'; // 'User did not borrow the specified currency'\\n  string public constant INCONSISTENT_FLASHLOAN_PARAMS = '49'; // 'Inconsistent flashloan parameters'\\n  string public constant BORROW_CAP_EXCEEDED = '50'; // 'Borrow cap is exceeded'\\n  string public constant SUPPLY_CAP_EXCEEDED = '51'; // 'Supply cap is exceeded'\\n  string public constant UNBACKED_MINT_CAP_EXCEEDED = '52'; // 'Unbacked mint cap is exceeded'\\n  string public constant DEBT_CEILING_EXCEEDED = '53'; // 'Debt ceiling is exceeded'\\n  string public constant UNDERLYING_CLAIMABLE_RIGHTS_NOT_ZERO = '54'; // 'Claimable rights over underlying not zero (aToken supply or accruedToTreasury)'\\n  string public constant STABLE_DEBT_NOT_ZERO = '55'; // 'Stable debt supply is not zero'\\n  string public constant VARIABLE_DEBT_SUPPLY_NOT_ZERO = '56'; // 'Variable debt supply is not zero'\\n  string public constant LTV_VALIDATION_FAILED = '57'; // 'Ltv validation failed'\\n  string public constant INCONSISTENT_EMODE_CATEGORY = '58'; // 'Inconsistent eMode category'\\n  string public constant PRICE_ORACLE_SENTINEL_CHECK_FAILED = '59'; // 'Price oracle sentinel validation failed'\\n  string public constant ASSET_NOT_BORROWABLE_IN_ISOLATION = '60'; // 'Asset is not borrowable in isolation mode'\\n  string public constant RESERVE_ALREADY_INITIALIZED = '61'; // 'Reserve has already been initialized'\\n  string public constant USER_IN_ISOLATION_MODE_OR_LTV_ZERO = '62'; // 'User is in isolation mode or ltv is zero'\\n  string public constant INVALID_LTV = '63'; // 'Invalid ltv parameter for the reserve'\\n  string public constant INVALID_LIQ_THRESHOLD = '64'; // 'Invalid liquidity threshold parameter for the reserve'\\n  string public constant INVALID_LIQ_BONUS = '65'; // 'Invalid liquidity bonus parameter for the reserve'\\n  string public constant INVALID_DECIMALS = '66'; // 'Invalid decimals parameter of the underlying asset of the reserve'\\n  string public constant INVALID_RESERVE_FACTOR = '67'; // 'Invalid reserve factor parameter for the reserve'\\n  string public constant INVALID_BORROW_CAP = '68'; // 'Invalid borrow cap for the reserve'\\n  string public constant INVALID_SUPPLY_CAP = '69'; // 'Invalid supply cap for the reserve'\\n  string public constant INVALID_LIQUIDATION_PROTOCOL_FEE = '70'; // 'Invalid liquidation protocol fee for the reserve'\\n  string public constant INVALID_EMODE_CATEGORY = '71'; // 'Invalid eMode category for the reserve'\\n  string public constant INVALID_UNBACKED_MINT_CAP = '72'; // 'Invalid unbacked mint cap for the reserve'\\n  string public constant INVALID_DEBT_CEILING = '73'; // 'Invalid debt ceiling for the reserve\\n  string public constant INVALID_RESERVE_INDEX = '74'; // 'Invalid reserve index'\\n  string public constant ACL_ADMIN_CANNOT_BE_ZERO = '75'; // 'ACL admin cannot be set to the zero address'\\n  string public constant INCONSISTENT_PARAMS_LENGTH = '76'; // 'Array parameters that should be equal length are not'\\n  string public constant ZERO_ADDRESS_NOT_VALID = '77'; // 'Zero address not valid'\\n  string public constant INVALID_EXPIRATION = '78'; // 'Invalid expiration'\\n  string public constant INVALID_SIGNATURE = '79'; // 'Invalid signature'\\n  string public constant OPERATION_NOT_SUPPORTED = '80'; // 'Operation not supported'\\n  string public constant DEBT_CEILING_NOT_ZERO = '81'; // 'Debt ceiling is not zero'\\n  string public constant ASSET_NOT_LISTED = '82'; // 'Asset is not listed'\\n  string public constant INVALID_OPTIMAL_USAGE_RATIO = '83'; // 'Invalid optimal usage ratio'\\n  string public constant INVALID_OPTIMAL_STABLE_TO_TOTAL_DEBT_RATIO = '84'; // 'Invalid optimal stable to total debt ratio'\\n  string public constant UNDERLYING_CANNOT_BE_RESCUED = '85'; // 'The underlying asset cannot be rescued'\\n  string public constant ADDRESSES_PROVIDER_ALREADY_ADDED = '86'; // 'Reserve has already been added to reserve list'\\n  string public constant POOL_ADDRESSES_DO_NOT_MATCH = '87'; // 'The token implementation pool address and the pool address provided by the initializing pool do not match'\\n  string public constant STABLE_BORROWING_ENABLED = '88'; // 'Stable borrowing is enabled'\\n  string public constant SILOED_BORROWING_VIOLATION = '89'; // 'User is trying to borrow multiple assets including a siloed one'\\n  string public constant RESERVE_DEBT_NOT_ZERO = '90'; // the total debt of the reserve needs to be 0\\n  string public constant FLASHLOAN_DISABLED = '91'; // FlashLoaning for this asset is disabled\\n}\\n\",\"keccak256\":\"0x61757945ed506349f2cec8b99806124ef17f70644faba9860fb134df8ca34e86\",\"license\":\"BUSL-1.1\"},\"contracts/sake/contracts/interfaces/IAaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.10;\\n\\nimport {IPriceOracleGetter} from \\\"../../../core-v3/contracts/interfaces/IPriceOracleGetter.sol\\\";\\nimport {IPoolAddressesProvider} from \\\"../../../core-v3/contracts/interfaces/IPoolAddressesProvider.sol\\\";\\n\\n/**\\n * @title IAaveOracle\\n * @author Sake\\n * @notice Defines the basic interface for the Aave Oracle\\n */\\ninterface IAaveOracle is IPriceOracleGetter {\\n    /**\\n     * @dev Emitted after the base currency is set\\n     * @param baseCurrency The base currency of used for price quotes\\n     * @param baseCurrencyUnit The unit of the base currency\\n     */\\n    event BaseCurrencySet(\\n        address indexed baseCurrency,\\n        uint256 baseCurrencyUnit\\n    );\\n\\n    /**\\n     * @dev Emitted after the price source of an asset is updated\\n     * @param asset The address of the asset\\n     * @param source The price source of the asset\\n     */\\n    event AssetSourceUpdated(address indexed asset, address indexed source);\\n\\n    /**\\n     * @dev Emitted after the address of fallback oracle is updated\\n     * @param fallbackOracle The address of the fallback oracle\\n     */\\n    event FallbackOracleUpdated(address indexed fallbackOracle);\\n\\n    /**\\n     * @notice Returns the PoolAddressesProvider\\n     * @return The address of the PoolAddressesProvider contract\\n     */\\n    function ADDRESSES_PROVIDER()\\n        external\\n        view\\n        returns (IPoolAddressesProvider);\\n\\n    /**\\n     * @notice Sets or replaces Chainlink price sources of assets\\n     * @param assets The addresses of the assets\\n     * @param sources The addresses of the price sources\\n     */\\n    function setChainlinkAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external;\\n\\n    /**\\n     * @notice Sets or replaces Pyth price sources of assets\\n     * @param assets The addresses of the assets\\n     * @param sources The addresses of the price sources\\n     */\\n    function setPythAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external;\\n\\n    /**\\n     * @notice Sets the fallback oracle\\n     * @param fallbackOracle The address of the fallback oracle\\n     */\\n    function setFallbackOracle(address fallbackOracle) external;\\n\\n    /**\\n     * @notice Returns a list of prices from a list of assets addresses\\n     * @param assets The list of assets addresses\\n     * @return The prices of the given assets\\n     */\\n    function getAssetsPrices(\\n        address[] calldata assets\\n    ) external view returns (uint256[] memory);\\n\\n    /**\\n     * @notice Returns the address of the Chainlink source for an asset address\\n     * @param asset The address of the asset\\n     * @return The address of the Chainlink source\\n     */\\n    function getChainlinkSourceOfAsset(\\n        address asset\\n    ) external view returns (address);\\n\\n    /**\\n     * @notice Returns the address of the Pyth source for an asset address\\n     * @param asset The address of the asset\\n     * @return The address of the Pyth source\\n     */\\n    function getPythSourceOfAsset(\\n        address asset\\n    ) external view returns (address);\\n\\n    /**\\n     * @notice Returns the address of the fallback oracle\\n     * @return The address of the fallback oracle\\n     */\\n    function getFallbackOracle() external view returns (address);\\n}\\n\",\"keccak256\":\"0x5d5d778954f245cd3d7fb5b859b3ad9d0fe5eb6422c45e54841f03271c8f6f5f\",\"license\":\"AGPL-3.0\"},\"contracts/sake/contracts/misc/AaveOracle.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.10;\\n\\n// import {AggregatorInterface} from '../dependencies/chainlink/AggregatorInterface.sol';\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport {Errors} from \\\"../../../core-v3/contracts/protocol/libraries/helpers/Errors.sol\\\";\\nimport {IACLManager} from \\\"../../../core-v3/contracts/interfaces/IACLManager.sol\\\";\\nimport {IPoolAddressesProvider} from \\\"../../../core-v3/contracts/interfaces/IPoolAddressesProvider.sol\\\";\\nimport {IPriceOracleGetter} from \\\"../../../core-v3/contracts/interfaces/IPriceOracleGetter.sol\\\";\\nimport {IAaveOracle} from \\\"../interfaces/IAaveOracle.sol\\\";\\n\\n/**\\n * @title AaveOracle\\n * @author Sake\\n * @notice Contract to get asset prices, manage price sources and update the fallback oracle\\n * - Use of Chainlink Aggregators as first source of price, Pyth Aggregators as second source of price\\n * - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallback oracle, which is pyth oracle - PythAggregatorV3\\n * - compare to original AaveOracle: use AggregatorV3Interface rather then AggregatorInterface, use latestRoundData() rather then latestAnswer()\\n */\\ncontract AaveOracle is IAaveOracle {\\n    IPoolAddressesProvider public immutable ADDRESSES_PROVIDER;\\n\\n    // Map of asset price chainlink sources (asset => priceSource)\\n    mapping(address => AggregatorV3Interface) private chainlinkAssetsSources;\\n\\n    // Map of asset price pyth sources (asset => priceSource)\\n    mapping(address => AggregatorV3Interface) private pythAssetsSources;\\n\\n    IPriceOracleGetter private _fallbackOracle;\\n    address public immutable override BASE_CURRENCY;\\n    uint256 public immutable override BASE_CURRENCY_UNIT;\\n\\n    /**\\n     * @dev Only asset listing or pool admin can call functions marked by this modifier.\\n     */\\n    modifier onlyAssetListingOrPoolAdmins() {\\n        _onlyAssetListingOrPoolAdmins();\\n        _;\\n    }\\n\\n    /**\\n     * @notice Constructor\\n     * @param provider The address of the new PoolAddressesProvider\\n     * @param assets The addresses of the assets\\n     * @param chainlinkSources The address of the chainlink source of each asset\\n     * @param pythSources The address of the pyth source of each asset\\n     * @param fallbackOracle The address of the fallback oracle to use if the data of an\\n     *        aggregator is not consistent, should be pyth\\n     * @param baseCurrency The base currency used for the price quotes. If USD is used, base currency is 0x0\\n     * @param baseCurrencyUnit The unit of the base currency\\n     */\\n    constructor(\\n        IPoolAddressesProvider provider,\\n        address[] memory assets,\\n        address[] memory chainlinkSources,\\n        address[] memory pythSources,\\n        address fallbackOracle,\\n        address baseCurrency,\\n        uint256 baseCurrencyUnit\\n    ) {\\n        ADDRESSES_PROVIDER = provider;\\n        _setFallbackOracle(fallbackOracle);\\n        _setChainlinkAssetsSources(assets, chainlinkSources);\\n        _setPythAssetsSources(assets, pythSources);\\n        BASE_CURRENCY = baseCurrency;\\n        BASE_CURRENCY_UNIT = baseCurrencyUnit;\\n        emit BaseCurrencySet(baseCurrency, baseCurrencyUnit);\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function setChainlinkAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external override onlyAssetListingOrPoolAdmins {\\n        _setChainlinkAssetsSources(assets, sources);\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function setPythAssetSources(\\n        address[] calldata assets,\\n        address[] calldata sources\\n    ) external override onlyAssetListingOrPoolAdmins {\\n        _setPythAssetsSources(assets, sources);\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function setFallbackOracle(\\n        address fallbackOracle\\n    ) external override onlyAssetListingOrPoolAdmins {\\n        _setFallbackOracle(fallbackOracle);\\n    }\\n\\n    /**\\n     * @notice Internal function to set the Chainlink sources for each asset\\n     * @param assets The addresses of the assets\\n     * @param sources The address of the source of each asset\\n     */\\n    function _setChainlinkAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(\\n            assets.length == sources.length,\\n            Errors.INCONSISTENT_PARAMS_LENGTH\\n        );\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            chainlinkAssetsSources[assets[i]] = AggregatorV3Interface(\\n                sources[i]\\n            );\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Internal function to set the Chainlink sources for each asset\\n     * @param assets The addresses of the assets\\n     * @param sources The address of the source of each asset\\n     */\\n    function _setPythAssetsSources(\\n        address[] memory assets,\\n        address[] memory sources\\n    ) internal {\\n        require(\\n            assets.length == sources.length,\\n            Errors.INCONSISTENT_PARAMS_LENGTH\\n        );\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            pythAssetsSources[assets[i]] = AggregatorV3Interface(sources[i]);\\n            emit AssetSourceUpdated(assets[i], sources[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice Internal function to set the fallback oracle\\n     * @param fallbackOracle The address of the fallback oracle\\n     */\\n    function _setFallbackOracle(address fallbackOracle) internal {\\n        _fallbackOracle = IPriceOracleGetter(fallbackOracle);\\n        emit FallbackOracleUpdated(fallbackOracle);\\n    }\\n\\n    /// @inheritdoc IPriceOracleGetter\\n    function getAssetPrice(\\n        address asset\\n    ) public view override returns (uint256) {\\n        AggregatorV3Interface chainLinkSource = chainlinkAssetsSources[asset];\\n        AggregatorV3Interface pythSource = pythAssetsSources[asset];\\n\\n        if (asset == BASE_CURRENCY) {\\n            return BASE_CURRENCY_UNIT;\\n        } else if (\\n            address(chainLinkSource) == address(0) &&\\n            address(pythSource) == address(0)\\n        ) {\\n            return _fallbackOracle.getAssetPrice(asset);\\n        } else {\\n            int256 chainLinkPrice = 0;\\n            int256 pythPrice = 0;\\n\\n            if (address(chainLinkSource) != address(0)) {\\n                (, chainLinkPrice, , , ) = chainLinkSource.latestRoundData();\\n            }\\n\\n            if (address(pythSource) != address(0)) {\\n                (, pythPrice, , , ) = pythSource.latestRoundData();\\n            }\\n\\n            // priority: chainlink -> pyth -> fallback\\n            if (chainLinkPrice > 0) {\\n                return uint256(chainLinkPrice);\\n            } else if (pythPrice > 0) {\\n                return uint256(pythPrice);\\n            } else {\\n                return _fallbackOracle.getAssetPrice(asset);\\n            }\\n        }\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function getAssetsPrices(\\n        address[] calldata assets\\n    ) external view override returns (uint256[] memory) {\\n        uint256[] memory prices = new uint256[](assets.length);\\n        for (uint256 i = 0; i < assets.length; i++) {\\n            prices[i] = getAssetPrice(assets[i]);\\n        }\\n        return prices;\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function getChainlinkSourceOfAsset(\\n        address asset\\n    ) external view override returns (address) {\\n        return address(chainlinkAssetsSources[asset]);\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function getPythSourceOfAsset(\\n        address asset\\n    ) external view override returns (address) {\\n        return address(pythAssetsSources[asset]);\\n    }\\n\\n    /// @inheritdoc IAaveOracle\\n    function getFallbackOracle() external view returns (address) {\\n        return address(_fallbackOracle);\\n    }\\n\\n    function _onlyAssetListingOrPoolAdmins() internal view {\\n        IACLManager aclManager = IACLManager(\\n            ADDRESSES_PROVIDER.getACLManager()\\n        );\\n        require(\\n            aclManager.isAssetListingAdmin(msg.sender) ||\\n                aclManager.isPoolAdmin(msg.sender),\\n            Errors.CALLER_NOT_ASSET_LISTING_OR_POOL_ADMIN\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x06012304d753088f9c22f4dc4e82a1e738e24c9cc555f3cb89fa2331b9e16855\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80638c89b64f11610081578063cc9012061161005b578063cc90120614610206578063e19f470014610219578063f15326741461024057600080fd5b80638c89b64f1461019e5780639d23d9f2146101d3578063b3596f07146101f357600080fd5b806337a6000e116100b257806337a6000e146101345780633bf3af77146101475780636210308c1461018057600080fd5b80630542975c146100ce578063170aee731461011f575b600080fd5b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61013261012d366004610de5565b610279565b005b610132610142366004610e55565b61028d565b6100f5610155366004610de5565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152600160205260409020541690565b60025473ffffffffffffffffffffffffffffffffffffffff166100f5565b6101c57f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610116565b6101e66101e1366004610ec1565b610308565b6040516101169190610f03565b6101c5610201366004610de5565b6103bd565b610132610214366004610e55565b61070e565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b6100f561024e366004610de5565b73ffffffffffffffffffffffffffffffffffffffff9081166000908152602081905260409020541690565b610281610783565b61028a816109b4565b50565b610295610783565b61030284848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610a2392505050565b50505050565b606060008267ffffffffffffffff81111561032557610325610f47565b60405190808252806020026020018201604052801561034e578160200160208202803683370190505b50905060005b838110156103b55761038685858381811061037157610371610f76565b90506020020160208101906102019190610de5565b82828151811061039857610398610f76565b6020908102919091010152806103ad81610fa5565b915050610354565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff808216600081815260208181526040808320546001909252822054919390811692918116917f0000000000000000000000000000000000000000000000000000000000000000909116141561044a57507f00000000000000000000000000000000000000000000000000000000000000009392505050565b73ffffffffffffffffffffffffffffffffffffffff8216158015610482575073ffffffffffffffffffffffffffffffffffffffff8116155b15610523576002546040517fb3596f0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301529091169063b3596f0790602401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190611005565b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff8416156105b9578373ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561058d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b1919061103d565b509194505050505b73ffffffffffffffffffffffffffffffffffffffff83161561064c578273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610620573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610644919061103d565b509193505050505b600082131561065e5750949350505050565b60008113156106705795945050505050565b6002546040517fb3596f0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529091169063b3596f0790602401602060405180830381865afa1580156106e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107049190611005565b9695505050505050565b610716610783565b61030284848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610bf592505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663707cd7166040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610814919061108d565b6040517f13ee32e000000000000000000000000000000000000000000000000000000000815233600482015290915073ffffffffffffffffffffffffffffffffffffffff8216906313ee32e090602401602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a591906110aa565b8061093957506040517f7be53ca100000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff821690637be53ca190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093991906110aa565b6040518060400160405280600181526020017f3500000000000000000000000000000000000000000000000000000000000000815250906109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a791906110cc565b60405180910390fd5b5050565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517fce7a780d33665b1ea097af5f155e3821b809ecbaa839d3b33aa83ba28168cefb90600090a250565b80518251146040518060400160405280600281526020017f373600000000000000000000000000000000000000000000000000000000000081525090610a96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a791906110cc565b5060005b8251811015610bf057818181518110610ab557610ab5610f76565b6020026020010151600080858481518110610ad257610ad2610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818181518110610b6457610b64610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110610b9457610b94610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380610be881610fa5565b915050610a9a565b505050565b80518251146040518060400160405280600281526020017f373600000000000000000000000000000000000000000000000000000000000081525090610c68576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a791906110cc565b5060005b8251811015610bf057818181518110610c8757610c87610f76565b602002602001015160016000858481518110610ca557610ca5610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818181518110610d3757610d37610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16838281518110610d6757610d67610f76565b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f22c5b7b2d8561d39f7f210b6b326a1aa69f15311163082308ac4877db6339dc160405160405180910390a380610dbb81610fa5565b915050610c6c565b73ffffffffffffffffffffffffffffffffffffffff8116811461028a57600080fd5b600060208284031215610df757600080fd5b8135610e0281610dc3565b9392505050565b60008083601f840112610e1b57600080fd5b50813567ffffffffffffffff811115610e3357600080fd5b6020830191508360208260051b8501011115610e4e57600080fd5b9250929050565b60008060008060408587031215610e6b57600080fd5b843567ffffffffffffffff80821115610e8357600080fd5b610e8f88838901610e09565b90965094506020870135915080821115610ea857600080fd5b50610eb587828801610e09565b95989497509550505050565b60008060208385031215610ed457600080fd5b823567ffffffffffffffff811115610eeb57600080fd5b610ef785828601610e09565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015610f3b57835183529284019291840191600101610f1f565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ffe577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561101757600080fd5b5051919050565b805169ffffffffffffffffffff8116811461103857600080fd5b919050565b600080600080600060a0868803121561105557600080fd5b61105e8661101e565b94506020860151935060408601519250606086015191506110816080870161101e565b90509295509295909350565b60006020828403121561109f57600080fd5b8151610e0281610dc3565b6000602082840312156110bc57600080fd5b81518015158114610e0257600080fd5b600060208083528351808285015260005b818110156110f9578581018301518582016040015282016110dd565b8181111561110b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea2646970667358221220534dc3cd89625c0941df3d1888029a85972a401f72bd96814698de90c86f867864736f6c634300080a0033",
  "devdoc": {
    "author": "Sake",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "assets": "The addresses of the assets",
          "baseCurrency": "The base currency used for the price quotes. If USD is used, base currency is 0x0",
          "baseCurrencyUnit": "The unit of the base currency",
          "chainlinkSources": "The address of the chainlink source of each asset",
          "fallbackOracle": "The address of the fallback oracle to use if the data of an        aggregator is not consistent, should be pyth",
          "provider": "The address of the new PoolAddressesProvider",
          "pythSources": "The address of the pyth source of each asset"
        }
      },
      "getAssetPrice(address)": {
        "params": {
          "asset": "The address of the asset"
        },
        "returns": {
          "_0": "The price of the asset"
        }
      },
      "getAssetsPrices(address[])": {
        "params": {
          "assets": "The list of assets addresses"
        },
        "returns": {
          "_0": "The prices of the given assets"
        }
      },
      "getChainlinkSourceOfAsset(address)": {
        "params": {
          "asset": "The address of the asset"
        },
        "returns": {
          "_0": "The address of the Chainlink source"
        }
      },
      "getFallbackOracle()": {
        "returns": {
          "_0": "The address of the fallback oracle"
        }
      },
      "getPythSourceOfAsset(address)": {
        "params": {
          "asset": "The address of the asset"
        },
        "returns": {
          "_0": "The address of the Pyth source"
        }
      },
      "setChainlinkAssetSources(address[],address[])": {
        "params": {
          "assets": "The addresses of the assets",
          "sources": "The addresses of the price sources"
        }
      },
      "setFallbackOracle(address)": {
        "params": {
          "fallbackOracle": "The address of the fallback oracle"
        }
      },
      "setPythAssetSources(address[],address[])": {
        "params": {
          "assets": "The addresses of the assets",
          "sources": "The addresses of the price sources"
        }
      }
    },
    "stateVariables": {
      "ADDRESSES_PROVIDER": {
        "return": "The address of the PoolAddressesProvider contract",
        "returns": {
          "_0": "The address of the PoolAddressesProvider contract"
        }
      },
      "BASE_CURRENCY": {
        "details": "Address 0x0 is reserved for USD as base currency.",
        "return": "Returns the base currency address.",
        "returns": {
          "_0": "Returns the base currency address."
        }
      },
      "BASE_CURRENCY_UNIT": {
        "details": "1 ether for ETH, 1e8 for USD.",
        "return": "Returns the base currency unit.",
        "returns": {
          "_0": "Returns the base currency unit."
        }
      }
    },
    "title": "AaveOracle",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "ADDRESSES_PROVIDER()": {
        "notice": "Returns the PoolAddressesProvider"
      },
      "BASE_CURRENCY()": {
        "notice": "Returns the base currency address"
      },
      "BASE_CURRENCY_UNIT()": {
        "notice": "Returns the base currency unit"
      },
      "constructor": {
        "notice": "Constructor"
      },
      "getAssetPrice(address)": {
        "notice": "Returns the asset price in the base currency"
      },
      "getAssetsPrices(address[])": {
        "notice": "Returns a list of prices from a list of assets addresses"
      },
      "getChainlinkSourceOfAsset(address)": {
        "notice": "Returns the address of the Chainlink source for an asset address"
      },
      "getFallbackOracle()": {
        "notice": "Returns the address of the fallback oracle"
      },
      "getPythSourceOfAsset(address)": {
        "notice": "Returns the address of the Pyth source for an asset address"
      },
      "setChainlinkAssetSources(address[],address[])": {
        "notice": "Sets or replaces Chainlink price sources of assets"
      },
      "setFallbackOracle(address)": {
        "notice": "Sets the fallback oracle"
      },
      "setPythAssetSources(address[],address[])": {
        "notice": "Sets or replaces Pyth price sources of assets"
      }
    },
    "notice": "Contract to get asset prices, manage price sources and update the fallback oracle - Use of Chainlink Aggregators as first source of price, Pyth Aggregators as second source of price - If the returned price by a Chainlink aggregator is <= 0, the call is forwarded to a fallback oracle, which is pyth oracle - PythAggregatorV3 - compare to original AaveOracle: use AggregatorV3Interface rather then AggregatorInterface, use latestRoundData() rather then latestAnswer()",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 48957,
        "contract": "contracts/sake/contracts/misc/AaveOracle.sol:AaveOracle",
        "label": "chainlinkAssetsSources",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)3076)"
      },
      {
        "astId": 48962,
        "contract": "contracts/sake/contracts/misc/AaveOracle.sol:AaveOracle",
        "label": "pythAssetsSources",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(AggregatorV3Interface)3076)"
      },
      {
        "astId": 48965,
        "contract": "contracts/sake/contracts/misc/AaveOracle.sol:AaveOracle",
        "label": "_fallbackOracle",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IPriceOracleGetter)9576"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)3076": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IPriceOracleGetter)9576": {
        "encoding": "inplace",
        "label": "contract IPriceOracleGetter",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AggregatorV3Interface)3076)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AggregatorV3Interface)",
        "numberOfBytes": "32",
        "value": "t_contract(AggregatorV3Interface)3076"
      }
    }
  }
}